group 'com.bship'
version '1.0-SNAPSHOT'

buildscript {
  repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath group: 'gradle.plugin.com.boxfuse.client', name: 'flyway-release', version: '4.0.3'
    classpath group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: '1.4.2.RELEASE'
    classpath group: 'org.springframework.cloud', name: 'spring-cloud-contract-gradle-plugin', version: '1.0.3.RELEASE'
  }
}

apply plugin: "org.flywaydb.flyway"
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'spring-cloud-contract'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8

dependencyManagement {
  imports {
    mavenBom 'org.springframework.cloud:spring-cloud-contract-dependencies:1.0.3.RELEASE'
  }
}

dependencies {
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: springBootVersion

  compile group: 'org.flywaydb', name: 'flyway-core', version: '4.0.3'
  compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.13'

  compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.6.1'
  compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.6.1'

  testCompile group: 'org.springframework.cloud', name: 'spring-cloud-contract-wiremock'
  testCompile group: 'org.springframework.restdocs', name: 'spring-restdocs-mockmvc', version: '1.1.2.RELEASE'
  testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion
  testCompile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.6'
  testCompile group: 'org.springframework.cloud', name: 'spring-cloud-starter-contract-verifier', version: '1.0.3.RELEASE'
}

contracts {
  packageWithBaseClasses = "com.bship.contracts"
  basePackageForTests = "com.bship.contracts"
  generatedTestSourcesDir = project.file("${project.rootDir}/game/src/test/java")
}

flyway {
  url = 'jdbc:mysql://localhost:3306/bs'
  user = 'root'
}

test {
  testLogging {
    events "FAILED", "SKIPPED"
    afterSuite { desc, result ->
      if (!desc.parent) { // will match the outermost suite
        println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
      }
    }
  }
}